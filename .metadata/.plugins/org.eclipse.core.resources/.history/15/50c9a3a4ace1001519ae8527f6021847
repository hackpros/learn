/**
 * 
 * UsersController.java
 * Copyright(C) 2015-2015 xxxxxx公司
 * All rights reserved.
 * -----------------------------------------------
 * 2015-10-30 Created
 */
package org.learn.boot.control;

import java.util.Date;

import javax.annotation.Resource;

import org.apache.log4j.Logger;
import org.learn.base.contorl.BaseController;
import org.learn.base.io.request.ReqHttpHeaders;
import org.learn.boot.domain.Users;
import org.learn.boot.service.IUsersService;
import org.learn.exception.BusinessException;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller
@RequestMapping(value = "framework-api/users")
public class UsersController extends BaseController {
	static final Logger log = Logger.getLogger(UsersController.class);

	@Resource
	IUsersService userService;

	
	@RequestMapping(value = "", method = RequestMethod.POST)
	@ResponseBody
	public void register(@Validated Users user,
			@RequestHeader ReqHttpHeaders headers, Model model) {

		model.addAttribute("data", userService.doRegister(user));

	}

	@RequestMapping(value = "", method = RequestMethod.GET)
	@ResponseBody
	public void login(@Validated Users user,
			@RequestHeader ReqHttpHeaders headers, Model model) {


		userService.checkCaptcha(user);
		Users users = userService.doLogin(user);
		if (users == null) {
			users.setPasswordErrorCount(users
					.getPasswordErrorCount() + 1);
		}

		userLoginres.setPasswordErrorCount(0);
		userLoginres.setLoginTime(new Date());

		request.getSession().setAttribute(USER_SESSION_KEY, userloginRes);
		model.addAttribute("data", userLoginres);

	}

	@RequestMapping(value = "/test", method = RequestMethod.GET)
	@ResponseBody
	public String test() {

		return "test";

	}

	@RequestMapping(value = "select", method = RequestMethod.GET)
	@ResponseBody
	public ModelMap select(@Validated UserLoginReq user,
			ReqHttpHeaders RequestHead) {

		ModelMap model = new ModelMap();
		Users users = userService.selectById(1L);
		model.addAttribute("data", users);
		return model;

	}
}